basePath: /
definitions:
  handler_todo.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler_todo.getAllListsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/structs.ToDo'
        type: array
    type: object
  handler_todo.statusAuthResponse:
    properties:
      status:
        type: string
    type: object
  handler_todo.statusResponse:
    properties:
      status:
        type: string
    type: object
  structs.ListToDoItems:
    properties:
      id:
        type: integer
      toDoId:
        type: integer
      toDoItemId:
        type: integer
    type: object
  structs.SignInUser:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  structs.SignUpUser:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  structs.ToDo:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  structs.ToDoAdd:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  structs.ToDoItem:
    properties:
      description:
        type: string
      done:
        default: false
        type: boolean
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  structs.ToDoItemAdd:
    properties:
      description:
        type: string
      done:
        default: false
        type: boolean
      title:
        type: string
    required:
    - title
    type: object
  structs.UpdateToDo:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: The simple ToDo List App
  title: ToDo List
  version: "1.0"
paths:
  /api/list:
    get:
      consumes:
      - application/json
      description: Getting ALl ToDo List
      operationId: get-all-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler_todo.getAllListsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
      security:
      - BearerAuth: []
      summary: Get All ToDo List
      tags:
      - list
    post:
      consumes:
      - application/json
      description: Create ToDo List
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.ToDoAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler_todo.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
      security:
      - BearerAuth: []
      summary: Create ToDo List
      tags:
      - list
  /api/list/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Certain ToDo List By Id
      operationId: delete-list
      parameters:
      - description: ToDo List Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler_todo.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete ToDo List
      tags:
      - list
    get:
      consumes:
      - application/json
      description: Get Certain ToDo List By Id
      operationId: get-list-by-id
      parameters:
      - description: ToDo List Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.ListToDoItems'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
      security:
      - BearerAuth: []
      summary: Get ToDo List
      tags:
      - list
    put:
      consumes:
      - application/json
      description: Update ToDo List By Id
      operationId: update-list
      parameters:
      - description: ToDo List Id
        in: path
        name: id
        required: true
        type: integer
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.UpdateToDo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler_todo.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
      security:
      - BearerAuth: []
      summary: Update ToDo List
      tags:
      - list
  /api/list/{id}/item:
    get:
      consumes:
      - application/json
      description: Get ToDo Item Of List
      operationId: get-item
      parameters:
      - description: ToDo Item Of List Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.ToDoItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
      security:
      - BearerAuth: []
      summary: Get ToDo Item Of List
      tags:
      - item
    post:
      consumes:
      - application/json
      description: Create ToDo Item of List
      operationId: create-item
      parameters:
      - description: ToDo Item Of List Id
        in: path
        name: id
        required: true
        type: integer
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.ToDoItemAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler_todo.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
      security:
      - BearerAuth: []
      summary: Create ToDo Item of List
      tags:
      - item
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign In User
      operationId: signIn-user
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.SignInUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler_todo.statusAuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
      summary: Sign In User
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Sign Up User
      operationId: signUp-user
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.SignUpUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler_todo.statusAuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler_todo.errorResponse'
      summary: Sign Up User
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
